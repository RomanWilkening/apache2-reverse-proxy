name: Build & Push Docker image to GHCR

on:
  push:
    branches: ["main"]       # passe deine Default-Branch an
    tags: ["v*.*.*"]         # semantische Tags publishen
  workflow_dispatch:         # manuell auslösbar

permissions:
  contents: read
  packages: write            # wichtig für GHCR

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Lowercase Image-Name aus Owner/Repo ableiten
      - name: Derive image name (lowercase)
        run: echo "IMAGE_NAME=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

      - name: Set up QEMU (multi-arch, optional)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ env.IMAGE_NAME }}
          # sinnvolle Standard-Tags
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            # "latest" nur auf Default-Branch
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile       # anpassen, falls deine Dockerfile woanders liegt
          push: true
          platforms: linux/amd64,linux/arm64   # optional: Multi-Arch
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false        # optional: SBOM/Attestations deaktivieren
